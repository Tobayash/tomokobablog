<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on tomokoba website</title>
    <link>/post/</link>
    <description>Recent content in Posts on tomokoba website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Fri, 07 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>COVID-19対応者ガイドの紹介資料まとめ</title>
      <link>/2020/08/07/covid-19%E5%AF%BE%E5%BF%9C%E8%80%85%E3%82%AC%E3%82%A4%E3%83%89%E3%81%AE%E7%B4%B9%E4%BB%8B%E8%B3%87%E6%96%99%E3%81%BE%E3%81%A8%E3%82%81/</link>
      <pubDate>Fri, 07 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/08/07/covid-19%E5%AF%BE%E5%BF%9C%E8%80%85%E3%82%AC%E3%82%A4%E3%83%89%E3%81%AE%E7%B4%B9%E4%BB%8B%E8%B3%87%E6%96%99%E3%81%BE%E3%81%A8%E3%82%81/</guid>
      <description>@import url(https://fonts.googleapis.com/earlyaccess/notosansjapanese.css); @import url(https://fonts.googleapis.com/css?family=Lato:400,900); body { } MathJax.Hub.Config({ tex2jax: { inlineMath: [ [&#39;$&#39;,&#39;$&#39;], [&#34;\\(&#34;,&#34;\\)&#34;] ], displayMath: [ [&#39;$$&#39;,&#39;$$&#39;], [&#34;\\[&#34;,&#34;\\]&#34;] ], processEscapes: true, processEnvironments: true }, // Center justify equations in code and markdown cells. Elsewhere // we use CSS to left justify single line equations in code cells. displayAlign: &#39;center&#39;, &#34;HTML-CSS&#34;: { styles: {&#39;.MathJax_Display&#39;: {&#34;margin&#34;: 0}}, linebreaks: { automatic: true } } }); COVID-1</description>
    </item>
    
    <item>
      <title>同じ形のDFを持つlistを１つのDFに</title>
      <link>/2020/05/05/%E5%90%8C%E3%81%98%E5%BD%A2%E3%81%AEdf%E3%82%92%E6%8C%81%E3%81%A4list%E3%82%92%EF%BC%91%E3%81%A4%E3%81%AEdf%E3%81%AB/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/05/05/%E5%90%8C%E3%81%98%E5%BD%A2%E3%81%AEdf%E3%82%92%E6%8C%81%E3%81%A4list%E3%82%92%EF%BC%91%E3%81%A4%E3%81%AEdf%E3%81%AB/</guid>
      <description>@import url(https://fonts.googleapis.com/earlyaccess/notosansjapanese.css); @import url(https://fonts.googleapis.com/css?family=Lato:400,900); body { font-size: 100%; } 同じ形のデータフレームを持つリストを、リスト番号を持ったまま１つのデータフレームにしたい。 ’qdap’パッケージのlist</description>
    </item>
    
    <item>
      <title>3要因の交互作用項を含む階層的重回帰分析</title>
      <link>/2020/03/10/3%E8%A6%81%E5%9B%A0%E3%81%AE%E4%BA%A4%E4%BA%92%E4%BD%9C%E7%94%A8%E9%A0%85%E3%82%92%E5%90%AB%E3%82%80%E9%9A%8E%E5%B1%A4%E7%9A%84%E9%87%8D%E5%9B%9E%E5%B8%B0%E5%88%86%E6%9E%90/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/03/10/3%E8%A6%81%E5%9B%A0%E3%81%AE%E4%BA%A4%E4%BA%92%E4%BD%9C%E7%94%A8%E9%A0%85%E3%82%92%E5%90%AB%E3%82%80%E9%9A%8E%E5%B1%A4%E7%9A%84%E9%87%8D%E5%9B%9E%E5%B8%B0%E5%88%86%E6%9E%90/</guid>
      <description>@import url(https://fonts.googleapis.com/earlyaccess/notosansjapanese.css); @import url(https://fonts.googleapis.com/css?family=Lato:400,900); body { } MathJax.Hub.Config({ tex2jax: { inlineMath: [ [&#39;$&#39;,&#39;$&#39;], [&#34;\\(&#34;,&#34;\\)&#34;] ], displayMath: [ [&#39;$$&#39;,&#39;$$&#39;], [&#34;\\[&#34;,&#34;\\]&#34;] ], processEscapes: true, processEnvironments: true }, // Center justify equations in code and markdown cells. Elsewhere // we use CSS to left justify single line equations in code cells. displayAlign: &#39;center&#39;, &#34;HTML-CSS&#34;: { styles: {&#39;.MathJax_Display&#39;: {&#34;margin&#34;: 0}}, linebreaks: { automatic: true } } }); 参考文献 Dawson, J. F.</description>
    </item>
    
    <item>
      <title>blogdownをストレスフリーに使いたい</title>
      <link>/2020/02/26/blogdown%E3%82%92%E3%82%B9%E3%83%88%E3%83%AC%E3%82%B9%E3%83%95%E3%83%AA%E3%83%BC%E3%81%AB%E4%BD%BF%E3%81%84%E3%81%9F%E3%81%84/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/02/26/blogdown%E3%82%92%E3%82%B9%E3%83%88%E3%83%AC%E3%82%B9%E3%83%95%E3%83%AA%E3%83%BC%E3%81%AB%E4%BD%BF%E3%81%84%E3%81%9F%E3%81%84/</guid>
      <description>@import url(https://fonts.googleapis.com/earlyaccess/notosansjapanese.css); @import url(https://fonts.googleapis.com/css?family=Lato:400,900); body { font-size: 100%; } Rのcodeとかいちいち調べるのめんどくさいし、覚えていられるほど記憶力もよくないので、自分のホームページにまとめときたい</description>
    </item>
    
    <item>
      <title>BlogのR codeで文字化けに悩んだ小話</title>
      <link>/2020/02/26/blog%E3%81%AEr-code%E3%81%A7%E6%96%87%E5%AD%97%E5%8C%96%E3%81%91%E3%81%AB%E6%82%A9%E3%82%93%E3%81%A0%E5%B0%8F%E8%A9%B1/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/02/26/blog%E3%81%AEr-code%E3%81%A7%E6%96%87%E5%AD%97%E5%8C%96%E3%81%91%E3%81%AB%E6%82%A9%E3%82%93%E3%81%A0%E5%B0%8F%E8%A9%B1/</guid>
      <description>@import url(https://fonts.googleapis.com/earlyaccess/notosansjapanese.css); @import url(https://fonts.googleapis.com/css?family=Lato:400,900); body { font-size: 100%; } R codeのもろもろをメモとしてホームページにあげてます。 もっとタグで分類とかできないかなと思ってたらblogdownがい</description>
    </item>
    
    <item>
      <title>yamlヘッダ</title>
      <link>/2020/01/01/yaml%E3%83%98%E3%83%83%E3%83%80/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/01/01/yaml%E3%83%98%E3%83%83%E3%83%80/</guid>
      <description>@import url(https://fonts.googleapis.com/earlyaccess/notosansjapanese.css); @import url(https://fonts.googleapis.com/css?family=Lato:400,900); body { font-size: 100%; } Rmarkdownでドキュメントを作るときの全体設定 改行やスペースが重要になるので注意 たとえば・・・ --- title: &amp;quot;Memo&amp;quot; output: html_document: toc: true toc_float: true --- こ</description>
    </item>
    
    <item>
      <title>クラスター分析</title>
      <link>/2020/01/01/%E3%82%AF%E3%83%A9%E3%82%B9%E3%82%BF%E3%83%BC%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/01/01/%E3%82%AF%E3%83%A9%E3%82%B9%E3%82%BF%E3%83%BC%E5%88%86%E6%9E%90/</guid>
      <description>@import url(https://fonts.googleapis.com/earlyaccess/notosansjapanese.css); @import url(https://fonts.googleapis.com/css?family=Lato:400,900); body { font-size: 100%; } 以下のコードを使う。 clust &amp;lt;- XXX #分析したいデータを入れる # 距離の計算 uclust &amp;lt;- dist(clust)^2 #ユークリッド距離の平方 result &amp;lt;- hclust(uclust, method=&amp;quot;ward.D2&amp;quot;) #Ward法 groups &amp;lt;- cutree(result, k=4)</description>
    </item>
    
    <item>
      <title>ロジスティック回帰分析のグラフ</title>
      <link>/2020/01/01/%E3%83%AD%E3%82%B8%E3%82%B9%E3%83%86%E3%82%A3%E3%83%83%E3%82%AF%E5%9B%9E%E5%B8%B0%E5%88%86%E6%9E%90%E3%81%AE%E3%82%B0%E3%83%A9%E3%83%95/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/01/01/%E3%83%AD%E3%82%B8%E3%82%B9%E3%83%86%E3%82%A3%E3%83%83%E3%82%AF%E5%9B%9E%E5%B8%B0%E5%88%86%E6%9E%90%E3%81%AE%E3%82%B0%E3%83%A9%E3%83%95/</guid>
      <description>@import url(https://fonts.googleapis.com/earlyaccess/notosansjapanese.css); @import url(https://fonts.googleapis.com/css?family=Lato:400,900); body { font-size: 100%; } なんかいい感じのグラフ描きたいなって思いますよね。 ローデータがぶわーってプロットされてて、回帰直線・曲線がシューン！なって</description>
    </item>
    
    <item>
      <title>探索的因子分析</title>
      <link>/2020/01/01/%E6%8E%A2%E7%B4%A2%E7%9A%84%E5%9B%A0%E5%AD%90%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/01/01/%E6%8E%A2%E7%B4%A2%E7%9A%84%E5%9B%A0%E5%AD%90%E5%88%86%E6%9E%90/</guid>
      <description>@import url(https://fonts.googleapis.com/earlyaccess/notosansjapanese.css); @import url(https://fonts.googleapis.com/css?family=Lato:400,900); body { font-size: 100%; } 科学において測定は重要である。心理学においては、目に見えない心の働きを研究するうえで様々な質問項目が利用されてきており、そ</description>
    </item>
    
    <item>
      <title>軸の設定１</title>
      <link>/2020/01/01/%E8%BB%B8%E3%81%AE%E8%A8%AD%E5%AE%9A%EF%BC%91/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/01/01/%E8%BB%B8%E3%81%AE%E8%A8%AD%E5%AE%9A%EF%BC%91/</guid>
      <description>@import url(https://fonts.googleapis.com/earlyaccess/notosansjapanese.css); @import url(https://fonts.googleapis.com/css?family=Lato:400,900); body { font-size: 100%; } ggplotでグラフを作成すると、x軸から棒グラフなんかが浮いてしまう（ラピュタ）。ラピュタを無くすならscale_y_c</description>
    </item>
    
    <item>
      <title>階層的重回帰分析</title>
      <link>/2020/01/01/%E9%9A%8E%E5%B1%A4%E7%9A%84%E9%87%8D%E5%9B%9E%E5%B8%B0%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/01/01/%E9%9A%8E%E5%B1%A4%E7%9A%84%E9%87%8D%E5%9B%9E%E5%B8%B0%E5%88%86%E6%9E%90/</guid>
      <description>@import url(https://fonts.googleapis.com/earlyaccess/notosansjapanese.css); @import url(https://fonts.googleapis.com/css?family=Lato:400,900); body { font-size: 100%; } 階層的重回帰分析は、ステップ１からステップ２へとステップごとに関心のある変数を投入していき、分散説明率が統計的に有意に増加</description>
    </item>
    
    <item>
      <title>再現性問題って何が問題なの？</title>
      <link>/2019/12/15/%E5%86%8D%E7%8F%BE%E6%80%A7%E5%95%8F%E9%A1%8C%E3%81%A3%E3%81%A6%E4%BD%95%E3%81%8C%E5%95%8F%E9%A1%8C%E3%81%AA%E3%81%AE/</link>
      <pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/12/15/%E5%86%8D%E7%8F%BE%E6%80%A7%E5%95%8F%E9%A1%8C%E3%81%A3%E3%81%A6%E4%BD%95%E3%81%8C%E5%95%8F%E9%A1%8C%E3%81%AA%E3%81%AE/</guid>
      <description>@import url(https://fonts.googleapis.com/earlyaccess/notosansjapanese.css); @import url(https://fonts.googleapis.com/css?family=Lato:400,900); body { font-size: 100%; } この記事は、Open and Reproducible Science Advent Calendar 2019の15日目の記事です。 担当は、福島県立医科大学で学振PDをしている小林智之です。 再現</description>
    </item>
    
  </channel>
</rss>